#!/bin/bash
#
# sfa   Wraps PLCAPI into the SFA compliant API
#
# chkconfig: 2345 5 99
#
# description:   Wraps PLCAPI into the SFA compliant API
#
# $Id$
# $URL$
#

# recompute /etc/sfa/sfa_config from the xml files
# not too sure this is the right place, should probably be done by sfa-config-tty..
xml_files="/etc/sfa/default_config.xml"
[ -f /etc/sfa/configs/site.xml ] && xml_files="$xml_files /etc/sfa/configs/site.xml"
plc-config --shell  $xml_files > /etc/sfa/sfa_config
plc-config --python $xml_files > /etc/sfa/sfa_config.py

# Source config
. /etc/sfa/sfa_config

# source function library
. /etc/init.d/functions


start() {
        echo -n $"Starting SFA:  "

        if [ "$SFA_REGISTRY_ENABLED" ]; then
            echo "Registry"
            daemon /usr/bin/sfa-server.py -r -d $OPTIONS
        fi

        if [ "$SFA_AGGREGATE_ENABLED" ]; then
            echo "Aggregate"
            daemon /usr/bin/sfa-server.py -a -d $OPTIONS
        fi
        
        if [ "$SFA_SM_ENABLED" ]; then
            echo "SliceMgr"
            daemon /usr/bin/sfa-server.py -s -d $OPTIONS
        fi

        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/sfa

}

stop() {
    echo -n $"Shutting down SFA: "
    killproc sfa-server.py
    RETVAL=$?

    echo
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/sfa
}



case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    stop
    start
    ;;
  condrestart)
    if [ -f /var/lock/subsys/sfa ]; then
        stop
        start
    fi
    ;;
  status)
    status sfa
    RETVAL=$?
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|condrestart|status}"
    exit 1
esac

exit $RETVAL

